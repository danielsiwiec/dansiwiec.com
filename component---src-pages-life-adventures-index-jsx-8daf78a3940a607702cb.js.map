{"version":3,"sources":["webpack:///./node_modules/lodash/isSymbol.js","webpack:///./src/components/Adventure/index.jsx","webpack:///./src/components/InfiniteScroll/index.jsx","webpack:///./src/pages/life/adventures/index.jsx","webpack:///./node_modules/lodash/_getRawTag.js","webpack:///./node_modules/lodash/isObjectLike.js","webpack:///./node_modules/lodash/isObject.js","webpack:///./node_modules/lodash/_objectToString.js","webpack:///./node_modules/lodash/_baseSlice.js","webpack:///./node_modules/lodash/_root.js","webpack:///./node_modules/lodash/isArrayLike.js","webpack:///./node_modules/lodash/_baseGetTag.js","webpack:///./node_modules/lodash/toInteger.js","webpack:///./node_modules/lodash/_freeGlobal.js","webpack:///./node_modules/lodash/toFinite.js","webpack:///./node_modules/lodash/chunk.js","webpack:///./node_modules/lodash/isFunction.js","webpack:///./node_modules/lodash/eq.js","webpack:///./node_modules/lodash/_isIterateeCall.js","webpack:///./node_modules/lodash/_Symbol.js","webpack:///./node_modules/lodash/isLength.js","webpack:///./node_modules/lodash/toNumber.js","webpack:///./node_modules/lodash/_isIndex.js"],"names":["baseGetTag","isObjectLike","module","exports","value","adventure","title","date","pics","moment","format","map","pic","p","className","key","fluid","childImageSharp","window","itemsToShow","InfitniteScroll","props","handleScroll","ticking","requestAnimationFrame","update","state","document","documentElement","offsetHeight","scrollY","innerHeight","this","setState","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","chunk","items","slice","c","sectionFactory","React","Component","section","adventures","data","allMarkdownRemark","edges","Layout","item","index","Adventure","node","frontmatter","pageQuery","Symbol","objectProto","Object","prototype","hasOwnProperty","nativeObjectToString","toString","symToStringTag","toStringTag","undefined","isOwn","call","tag","unmasked","e","result","type","array","start","end","length","Array","freeGlobal","freeSelf","self","root","Function","isFunction","isLength","getRawTag","objectToString","toFinite","remainder","global","toNumber","baseSlice","isIterateeCall","toInteger","nativeCeil","Math","ceil","nativeMax","max","size","guard","resIndex","isObject","other","eq","isArrayLike","isIndex","object","isSymbol","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","valueOf","replace","isBinary","test","reIsUint"],"mappings":"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","file":"component---src-pages-life-adventures-index-jsx-8daf78a3940a607702cb.js","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","import React from 'react'\nimport moment from 'moment'\nimport Img from 'gatsby-image'\nimport './style.scss'\n\nexport default ({ adventure: { title, date, pics } }) => {\n  return (\n    <div>\n      <h2>{title} {moment(date).format('MMM YYYY')}</h2>\n      {pics.map((pic, p) => (\n        <div className='adventure-image' key={p}>\n          <Img fluid={pic.childImageSharp.fluid} title='blah' />\n        </div>\n      ))}\n    </div>\n  )\n}\n","import React from 'react'\nimport chunk from 'lodash/chunk'\n\nconst INITIAL_COUNT = 2\n\n// This would normally be in a Redux store or some other global data store.\nif (typeof window !== 'undefined') {\n  window.itemsToShow = INITIAL_COUNT\n}\n\nexport default class InfitniteScroll extends React.Component {\n  constructor (props) {\n    super(props)\n    let itemsToShow = INITIAL_COUNT\n    if (typeof window !== 'undefined') {\n      itemsToShow = window.itemsToShow\n    }\n\n    this.state = { itemsToShow }\n  }\n\n  update () {\n    const distanceToBottom =\n      document.documentElement.offsetHeight -\n      (window.scrollY + window.innerHeight)\n    if (distanceToBottom < 100) {\n      this.setState({ itemsToShow: this.state.itemsToShow + 1 })\n    }\n    this.ticking = false\n  }\n\n  handleScroll = () => {\n    if (!this.ticking) {\n      this.ticking = true\n      requestAnimationFrame(() => this.update()) // eslint-disable-line no-undef\n    }\n  }\n\n  componentDidMount () {\n    window.addEventListener('scroll', this.handleScroll)\n  }\n\n  componentWillUnmount () {\n    window.removeEventListener('scroll', this.handleScroll)\n    window.itemsToShow = this.state.itemsToShow\n  }\n\n  render () {\n    return (\n      <div>\n        {chunk(this.props.items.slice(0, this.state.itemsToShow), 3).map((chunk, c) => (\n          <div key={c}>\n            {chunk.map(this.props.sectionFactory)}\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../../../components/Layout'\nimport Adventure from '../../../components/Adventure'\nimport InfiniteScroll from '../../../components/InfiniteScroll'\n\nexport default props => {\n  const adventures = props.data.allMarkdownRemark.edges\n\n  return (\n    <Layout {...props}>\n      <h1 className='page__title'>Adventures</h1>\n      Bushwacking, world trotting, hiking, trouble making - you name it!\n      <InfiniteScroll items={adventures} sectionFactory={section} />\n    </Layout>\n  )\n}\n\nconst section = (item, index) => {\n  return <Adventure key={index} adventure={item.node.frontmatter} />\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(filter: {frontmatter: {category: {eq: \"adventures\"}}}, sort: {fields: [frontmatter___date], order: DESC}) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date\n            pics {\n              childImageSharp {\n                fluid {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    site {\n        siteMetadata {\n          title\n          subtitle\n          copyright\n          menu {\n            label\n            path\n            subs {\n              path\n              label\n              external\n            }\n          }\n          author {\n            name\n            gravatar\n            email\n            github\n            linkedin\n            instagram\n            medium\n          }\n        }\n      }\n  }\n  \n`\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var baseSlice = require('./_baseSlice'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * Creates an array of elements split into groups the length of `size`.\n * If `array` can't be split evenly, the final chunk will be the remaining\n * elements.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to process.\n * @param {number} [size=1] The length of each chunk\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the new array of chunks.\n * @example\n *\n * _.chunk(['a', 'b', 'c', 'd'], 2);\n * // => [['a', 'b'], ['c', 'd']]\n *\n * _.chunk(['a', 'b', 'c', 'd'], 3);\n * // => [['a', 'b', 'c'], ['d']]\n */\nfunction chunk(array, size, guard) {\n  if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n    size = 1;\n  } else {\n    size = nativeMax(toInteger(size), 0);\n  }\n  var length = array == null ? 0 : array.length;\n  if (!length || size < 1) {\n    return [];\n  }\n  var index = 0,\n      resIndex = 0,\n      result = Array(nativeCeil(length / size));\n\n  while (index < length) {\n    result[resIndex++] = baseSlice(array, index, (index += size));\n  }\n  return result;\n}\n\nmodule.exports = chunk;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n"],"sourceRoot":""}